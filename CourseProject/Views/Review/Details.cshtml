@model ReviewViewModel
@{
    ViewData["Title"] = "Detail";
}

<div class="col-md-12">
    <h1>@Model.RiviewName</h1>
    <div class="row">
        <div class="col-md-6">
            @if (Model.ImageUrl != "")
            {
                <img src="@Model.ImageUrl" alt="Not Found" style="width: 100%" class="rounded-3" />
            }
            @if (Model.isLiked)
            {
                <div id="like">
                    <a id="unlikereview"><i class="bi bi-heart-fill text-danger fs-4" onclick="unlike()"></i></a> Liked @Model.LikesCount users.
                </div>
            }
            else
            {
                <div id="like">
                    <a id="likereview"><i class="bi bi-heart text-danger fs-4"></i></a> Liked @Model.LikesCount users.
                </div>
            }

        </div>
        <div class="col-md-6">
            <div class="text-center bg-info text-white">
                Grade | @Model.Grade
            </div>
            <div class="accordion mt-2" id="accordionExample">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingOne">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                            @(Model.Description.Substring(0, 30) + "...")
                        </button>
                    </h2>
                    <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                        <div class="accordion-body">
                            @Model.Description
                        </div>
                    </div>
                </div>
            </div>
            <div class="text-center bg-info text-white mt-2">
                Group | @Model.Group
            </div>
            <div class="text-center bg-info text-white mt-2">
                Created Time | @Model.createdTime
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        const unlike = async () => {
            let islike = "";
            let username = (@Model.userId).toString()
            let reviewid = (@Model.Id).toString()
            await fetch("http://localhost:3000/api/like?userName=" + username + "&reviewId=" + reviewid, { headers: { 'Accept': "Courseproject" }, method: 'POST' }).then((response) => islike = response.json())
            console.log(islike["value"])
        }
    </script>
}